version: '2'
services:
    mysql:
        network_mode: "bridge"
        environment:
            MYSQL_ROOT_PASSWORD: "root"
            MYSQL_USER: 'zhang'
            MYSQL_PASS: 'zhang'
        image: "mysql:5.7"
        restart: always
        volumes:
            - "./mysql/db:/var/lib/mysql"
            - "./mysql/conf/my.cnf:/etc/my.cnf"
            - "./mysql/init:/docker-entrypoint-initdb.d/"
        ports:
            - "3306:3306"

    mongodb:
        network_mode: "bridge"
        image: mongo
        container_name: mongodb
        ports:
            - 27017:27017
        volumes:
            - "./mongo/configdb:/data/configdb"
            - ./mongo/db:/data/db
        environment:
            - MONGO_INITDB_ROOT_USERNAME=admin
            - MONGO_INITDB_ROOT_PASSWORD=admin
        tty: true

    my_redis:
        image: redis:6.2.6-alpine # 指定服务镜像，最好是与之前下载的redis配置文件保持一致
        container_name: my_redis # 容器名称
        restart: on-failure # 重启方式
        environment:
            - TZ=Asia/Shanghai # 设置时区
        volumes: # 配置数据卷
            - ./redis/data:/data
            - ./redis/redis.conf:/etc/redis/redis.conf
        ports: # 映射端口
            - "6380:6379"
        sysctls: # 设置容器中的内核参数
            - net.core.somaxconn=1024
        #  - vm.overcommit_memory=1
        command: /bin/sh -c "echo 'vm.overcommit_memory = 1' >> /etc/sysctl.conf
                    && redis-server /etc/redis/redis.conf --appendonly yes" # 指定配置文件并开启持久化
        privileged: true # 使用该参数，container内的root拥有真正的root权限。否则，container内的root只是外部的一个普通用户权限
networks:
  default:
    name: bridge
  elastic:
    driver: bridge